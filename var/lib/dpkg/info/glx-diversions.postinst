#!/bin/sh
set -e


TRIPLETS="/ /i386-linux-gnu/ /x86_64-linux-gnu/"
#DIVERT_QUIET="--quiet"

# <target: wheezy>
exists()
{
	test -e "$1" || test -L "$1"
}

# Usage: migrate_diversion original_file new_diverted_file [old_diverted_file]...
# Removes the old diversion (if currently unused) or migrates it to the new location.
migrate_diversion()
{
	local file_orig file_new_divert file_old_divert old_diverter old_divert old_local_or_package
	file_orig="$1"
	file_new_divert="$2"
	shift 2
	file_old_divert=""
	old_diverter="$(dpkg-divert --listpackage $file_orig)"

	if [ -n "$old_diverter" ] \
		&& [ "$old_diverter" != "$DPKG_MAINTSCRIPT_PACKAGE" ]
	then
		if [ "$old_diverter" = "LOCAL" ]
		then
			old_local_or_package="--local"
		else
			old_local_or_package="--package $old_diverter"
		fi
		file_old_divert="$(dpkg-divert --truename $file_orig)"
		if ! exists "$file_orig" || ! exists "$file_old_divert"
		then
			"dpkg-divert" --remove --rename $old_local_or_package --divert \
				"$file_old_divert" \
				"$file_orig"
		else
			"dpkg-divert" --remove $old_local_or_package --divert \
				"$file_old_divert" \
				"$file_orig"
			if [ "$file_old_divert" != "$file_new_divert" ]; then
				echo "Moving $file_old_divert to $file_new_divert"
				mv "$file_old_divert" "$file_new_divert"
			fi
			dpkg-divert --add --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
				"$file_new_divert" \
				"$file_orig"
		fi
	fi

	for old_divert in "$file_old_divert" "$file_orig.distrib" "$@"
	do
		if exists "$old_divert"
		then
			echo "ERROR: $old_divert does still exist. Aborting." >&2
			echo "       This file seems to be remaining from an old unclean installation," >&2
			echo "       update or removal and needs to be moved away (or deleted) before" >&2
			echo "       the installation of $DPKG_MAINTSCRIPT_PACKAGE can continue." >&2
			exit 1
		fi
	done
}

if [ "$1" = "configure" ]
then

	# dpkg-reconfigure does not set DPKG_MAINTSCRIPT_PACKAGE (#560317)
	if [ -z "$DPKG_MAINTSCRIPT_PACKAGE" ]
	then
		echo "ERROR: DPKG_MAINTSCRIPT_PACKAGE is not set, usually a bug in dpkg-reconfigure"
		exit 1
	fi

	# remove alternatives set up by libgl1-nvidia-alternatives
	update-alternatives --remove libGL.so.1 /usr/lib/nvidia/diversions/libGL.so.1
	update-alternatives --remove libGL.so /usr/lib/nvidia/diversions/libGL.so

	# remove alternatives set up by libglx-nvidia-alternatives
	update-alternatives --remove libglx.so /usr/lib/nvidia/diversions/libglx.so

	# remove alternatives that include /usr/lib/xorg/modules/extensions/libglx.so
	if dpkg --compare-versions "$2" lt "0.1.92" ; then
		update-alternatives --remove-all glx 2>/dev/null || true
	fi

	# take over diversions from nvidia-glx{,-legacy-*xx},
	# libgl{1,x}-nvidia-alternatives, fglrx-{glx, driver}
	for file in libGL.so.1.2 libGL.so.1 libGL.so
	do
		migrate_diversion \
			"/usr/lib/$file" \
			"/usr/lib/mesa-diverted/$file" \
			"/usr/lib/nvidia/$file.xlibmesa" \
			"/usr/lib/nvidia/diversions/$file" \
			"/usr/lib/fglrx/diversions/$file"
	done
	migrate_diversion \
		"/usr/lib/xorg/modules/extensions/libglx.so" \
		"/usr/lib/mesa-diverted/libglx.so" \
		"/usr/lib/nvidia/libglx.so.xlibmesa" \
		"/usr/lib/nvidia/diversions/libglx.so" \
		"/usr/lib/fglrx/diversions/libglx.so"
	migrate_diversion \
		"/usr/lib/debug/usr/lib/xorg/modules/extensions/libglx.so" \
		"/usr/lib/mesa-diverted/libglx.so.dbg" \
		"/usr/lib/nvidia/diversions/libglx.so.dbg"

	rmdir /usr/lib/nvidia/diversions 2>/dev/null || true
	rmdir /usr/lib/fglrx/diversions 2>/dev/null || true

	# remove the libglx.so diversions, no longer needed
	dpkg-divert $DIVERT_QUIET --remove --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
		/usr/lib/mesa-diverted/libglx.so.dbg \
		/usr/lib/debug/usr/lib/xorg/modules/extensions/libglx.so
	dpkg-divert $DIVERT_QUIET --remove --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
		/usr/lib/mesa-diverted/libglx.so \
		/usr/lib/xorg/modules/extensions/libglx.so

fi
# </target: wheezy>


add_multiarch_diversion()
{
	local file source_dir diversion_dir triplet
	file="$1"
	source_dir="$2"
	diversion_dir="$3"

	for triplet in $TRIPLETS ; do
		dpkg-divert $DIVERT_QUIET --add --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
			${diversion_dir}${triplet}${file} \
			${source_dir}${triplet}${file}
	done
}

if [ "$1" = "configure" ]
then

	# make new diversions
	add_multiarch_diversion libGL.so /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1.2 /usr/lib /usr/lib/mesa-diverted

fi


# validate_diverted_symlink original diverted expected_target...
# the last expected_target will be used as default for restoring the link
validate_diverted_symlink()
{
	local original diverted target owner filename link
	original="$1"
	diverted="$2"
	shift 2
	filename="$(basename "$original")"

	# determine ownership of the original file
	owner="$(LC_ALL=C dpkg-query -S "$original" 2>/dev/null | grep -v '^diversion by' || true)"

	if [ -L "$diverted" ] && [ -z "$owner" ]; then
		echo "Removing diverted '$filename' symlink owned by no package."
		rm "$diverted"
	fi

	link="$(readlink "$diverted" || true)"
	for target in "$@"; do
		if [ -L "$diverted" ] && [ "$link" = "$target" ]; then
			break
		fi
	done
	if [ -L "$diverted" ] && [ "$link" != "$target" ]; then
		echo "Removing diverted '$filename' symlink with unexpected target '$link'."
		rm "$diverted"
	fi

	if [ ! -L "$diverted" ] && [ -n "$owner" ]; then
		echo "Restoring diverted '$filename' symlink."
		ln -s "$target" "$diverted"
	fi
}

if [ "$1" = "configure" ]; then

	# do some validation of the diverted libGL.so and libGL.so.1
	for triplet in $TRIPLETS ; do
		validate_diverted_symlink /usr/lib${triplet}libGL.so /usr/lib/mesa-diverted${triplet}libGL.so mesa/libGL.so libGL.so.1
		validate_diverted_symlink /usr/lib${triplet}libGL.so.1 /usr/lib/mesa-diverted${triplet}libGL.so.1 mesa/libGL.so.1 libGL.so.1.2
	done

fi


if [ "$1" = "configure" ]; then

	# activate triggers
	dpkg-trigger /usr/lib/libGL.so.1
	dpkg-trigger /usr/lib/libGL.so

	ldconfig

fi




exit 0
